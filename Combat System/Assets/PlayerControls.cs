//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""PlayerMovement"",
            ""id"": ""640a1345-78c5-472e-bf20-0067975a7521"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""765e132e-0600-4b8a-bc9a-78698766f2dd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""c9370d7c-3d46-491d-accf-3e529de7fee6"",
                    ""path"": ""Dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""58fe8fa8-d9f3-4354-9d85-841f7a550b75"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9a41d58d-74c6-47d4-abd4-d2b70a8a2790"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c5a549fc-de04-467b-a51f-ddc1f54fec85"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f31a32d8-e5c8-445c-93b6-3812de3651be"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""69d64e3d-ddef-4d86-85b5-bf7615709b71"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""64f8037e-2eaa-47db-aadf-bc7929182277"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d1c6104a-9718-4222-ad78-2ab99691006c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e55ee510-fceb-4035-81f6-85b8d1771f7d"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left Stick"",
                    ""id"": ""305cdf76-ce9d-4271-8f0c-70f9ccd708d3"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""37942c22-c79e-4839-a47f-49956e260b16"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e641c597-5064-4d29-a1e3-17489e0cb0ef"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""58c0aeb9-1d58-467c-8c56-6df324e51012"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7b9081c9-2a87-4cfb-b522-8453bae40074"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Player Camera"",
            ""id"": ""c19f606d-7c82-4378-82a3-a240447a527b"",
            ""actions"": [
                {
                    ""name"": ""Camera Controls"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f746b20f-daf7-49f3-a7ea-5c1d3f7e16c2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Right Stick"",
                    ""id"": ""8dcef32d-6ae6-424d-8bd8-a949eb952cd0"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Controls"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1cde3fd9-b042-4ecc-9ca9-a220ad2c5482"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Controls"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3818f2eb-36ef-4905-8092-84fe2c1a2080"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Controls"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8124b270-79c7-488f-b514-c1fb36edc57c"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Controls"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""98771459-1822-4c5f-b412-0d20302181c1"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Controls"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Mouse Position"",
                    ""id"": ""e0cf00ad-f448-47d8-b0ea-bf4c59c2cb48"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Controls"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c7361e03-bc4c-4ebf-9303-086dafc20860"",
                    ""path"": ""<Mouse>/delta/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Controls"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c19f11d6-9d51-4ad1-967d-50df5fd0aa35"",
                    ""path"": ""<Mouse>/delta/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Controls"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5ff601ee-8d5c-499e-b84d-07083c15f332"",
                    ""path"": ""<Mouse>/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Controls"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2e63954b-fb63-4d86-929c-2bc79400440f"",
                    ""path"": ""<Mouse>/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Controls"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""PlayerActions"",
            ""id"": ""243cd1e8-e33c-404d-8cf6-fd81e943c570"",
            ""actions"": [
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""5e2c5b3b-bb5e-46ba-b9f3-08001ed0d7d2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""c3ad7f00-e2c8-43c5-abc1-b1da5eaefdba"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R1/LeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""8d78fde8-62e9-49a9-831f-f6dc56752552"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Qued R1"",
                    ""type"": ""Button"",
                    ""id"": ""794b37e6-c2cd-41cf-abe6-a0e2e33cada0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R2"",
                    ""type"": ""Button"",
                    ""id"": ""94d8ba01-c211-469b-8e1f-4556a948a140"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Qued R2"",
                    ""type"": ""Button"",
                    ""id"": ""504e75d2-35ed-4988-8df6-23ed9565653a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChargeR2"",
                    ""type"": ""PassThrough"",
                    ""id"": ""84e4fb74-fd28-4f8e-b34f-d798eafa4d9b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(pressPoint=0.1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6fecd89d-7049-42e5-bba7-30a4f3398adb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LockOn"",
                    ""type"": ""Button"",
                    ""id"": ""67832a99-ea36-479f-bd3a-fc20d063c91f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SeekLockOnTargetLeft"",
                    ""type"": ""Button"",
                    ""id"": ""43da8e1e-3b58-4a8a-834e-366f5d33dd5b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SeekLockOnTargetRight"",
                    ""type"": ""Button"",
                    ""id"": ""a3a4a15d-6a20-444c-808f-3f83b04508d1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch Right Weapon"",
                    ""type"": ""Button"",
                    ""id"": ""f9fd9dd5-7ea4-4d4a-9c65-dd84c40ce980"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch Left Weapon"",
                    ""type"": ""Button"",
                    ""id"": ""c974b54e-f75b-4907-92bf-f59b05724e89"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchWeaponRightScroll"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f7d30372-c10c-41cd-9db7-67b72bd0a1f1"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchWeaponLeftScroll"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6195dbfb-e208-4b53-b386-159bf969e229"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5b26d767-3207-44a3-8ebf-9469814193e3"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40d3b624-0520-410b-ac9b-b64ab28c4d28"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e35dbf3d-c4b9-4a2e-861e-7e6da398716c"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8052fb4-a333-4347-94c4-01650fc0fc9a"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f91f79a2-f494-4ebd-a878-943b076e09fd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R1/LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a659d96d-712c-4bd2-b611-d7e9c5aaf3e1"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R1/LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e314ab9b-76a2-4e2e-9151-3ff6196b3c03"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Qued R1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57e0170b-ff6a-407a-9e05-ad1505d83f3a"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Qued R1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e6860be-478a-4f06-8be7-19acc48851ac"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e35152bb-cc15-4558-b9f4-f6c67c528d97"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e21778a-0273-4b5c-b7c0-e78658fc5de4"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Qued R2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""160c2cc1-e677-4ece-a19b-fac254b10d2d"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Qued R2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dcd8e9ce-9d74-4834-9372-b7993f2db8f2"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch Right Weapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6caea4c8-0a74-4a10-b5db-1abb7881ece0"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch Right Weapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d087434-d8c1-4398-a0f4-f83bc97ab434"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch Left Weapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80ecfcf1-d3c3-4d8d-b13c-4fc8cf4f328f"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch Left Weapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd7210cd-86d9-4d31-8867-f74d0f230315"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Hold(pressPoint=0.1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChargeR2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1bed2411-057f-4447-bcc8-957bb57b0b3a"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": ""Hold(pressPoint=0.1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChargeR2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7025508-88b7-4aa8-8d32-7493145d7246"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab64f02d-8ff3-46b0-b4e5-fcf316b9224d"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2821810-3f6b-4277-86d4-cae96854ff6b"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SeekLockOnTargetLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""063c71c5-85f9-430f-a2fe-f972188bc710"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SeekLockOnTargetLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ebd2f8a-ead1-46a6-9b87-838d7a1a7d1c"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SeekLockOnTargetRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59f546a8-4a12-4e48-9c15-608a083300b1"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SeekLockOnTargetRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d22fb2d-b9f0-4ef0-85d8-739a806f7805"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8534684-6cbe-400a-aa24-64a61b9f4434"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0330084-cbcc-4589-97e6-d9e4f3d18514"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchWeaponRightScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1179017e-ebfd-44f0-aa8e-0970befaac4b"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchWeaponLeftScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""f41b241c-58df-4c2e-a30c-828b37eeb481"",
            ""actions"": [
                {
                    ""name"": ""Delete Save File"",
                    ""type"": ""Button"",
                    ""id"": ""9528216f-66e9-4adc-8871-4cb1524db9ee"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9981d7cf-aae0-421b-8632-dcc8972b6e69"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Delete Save File"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e9d17cb-020e-4c21-adfc-057efd379cd3"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Delete Save File"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerMovement
        m_PlayerMovement = asset.FindActionMap("PlayerMovement", throwIfNotFound: true);
        m_PlayerMovement_Movement = m_PlayerMovement.FindAction("Movement", throwIfNotFound: true);
        // Player Camera
        m_PlayerCamera = asset.FindActionMap("Player Camera", throwIfNotFound: true);
        m_PlayerCamera_CameraControls = m_PlayerCamera.FindAction("Camera Controls", throwIfNotFound: true);
        // PlayerActions
        m_PlayerActions = asset.FindActionMap("PlayerActions", throwIfNotFound: true);
        m_PlayerActions_Dodge = m_PlayerActions.FindAction("Dodge", throwIfNotFound: true);
        m_PlayerActions_Jump = m_PlayerActions.FindAction("Jump", throwIfNotFound: true);
        m_PlayerActions_R1LeftClick = m_PlayerActions.FindAction("R1/LeftClick", throwIfNotFound: true);
        m_PlayerActions_QuedR1 = m_PlayerActions.FindAction("Qued R1", throwIfNotFound: true);
        m_PlayerActions_R2 = m_PlayerActions.FindAction("R2", throwIfNotFound: true);
        m_PlayerActions_QuedR2 = m_PlayerActions.FindAction("Qued R2", throwIfNotFound: true);
        m_PlayerActions_ChargeR2 = m_PlayerActions.FindAction("ChargeR2", throwIfNotFound: true);
        m_PlayerActions_Sprint = m_PlayerActions.FindAction("Sprint", throwIfNotFound: true);
        m_PlayerActions_LockOn = m_PlayerActions.FindAction("LockOn", throwIfNotFound: true);
        m_PlayerActions_SeekLockOnTargetLeft = m_PlayerActions.FindAction("SeekLockOnTargetLeft", throwIfNotFound: true);
        m_PlayerActions_SeekLockOnTargetRight = m_PlayerActions.FindAction("SeekLockOnTargetRight", throwIfNotFound: true);
        m_PlayerActions_SwitchRightWeapon = m_PlayerActions.FindAction("Switch Right Weapon", throwIfNotFound: true);
        m_PlayerActions_SwitchLeftWeapon = m_PlayerActions.FindAction("Switch Left Weapon", throwIfNotFound: true);
        m_PlayerActions_SwitchWeaponRightScroll = m_PlayerActions.FindAction("SwitchWeaponRightScroll", throwIfNotFound: true);
        m_PlayerActions_SwitchWeaponLeftScroll = m_PlayerActions.FindAction("SwitchWeaponLeftScroll", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_DeleteSaveFile = m_UI.FindAction("Delete Save File", throwIfNotFound: true);
    }

    ~@PlayerControls()
    {
        UnityEngine.Debug.Assert(!m_PlayerMovement.enabled, "This will cause a leak and performance issues, PlayerControls.PlayerMovement.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_PlayerCamera.enabled, "This will cause a leak and performance issues, PlayerControls.PlayerCamera.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_PlayerActions.enabled, "This will cause a leak and performance issues, PlayerControls.PlayerActions.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_UI.enabled, "This will cause a leak and performance issues, PlayerControls.UI.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerMovement
    private readonly InputActionMap m_PlayerMovement;
    private List<IPlayerMovementActions> m_PlayerMovementActionsCallbackInterfaces = new List<IPlayerMovementActions>();
    private readonly InputAction m_PlayerMovement_Movement;
    public struct PlayerMovementActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerMovementActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerMovement_Movement;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMovementActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerMovementActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
        }

        private void UnregisterCallbacks(IPlayerMovementActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
        }

        public void RemoveCallbacks(IPlayerMovementActions instance)
        {
            if (m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerMovementActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerMovementActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerMovementActions @PlayerMovement => new PlayerMovementActions(this);

    // Player Camera
    private readonly InputActionMap m_PlayerCamera;
    private List<IPlayerCameraActions> m_PlayerCameraActionsCallbackInterfaces = new List<IPlayerCameraActions>();
    private readonly InputAction m_PlayerCamera_CameraControls;
    public struct PlayerCameraActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerCameraActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraControls => m_Wrapper.m_PlayerCamera_CameraControls;
        public InputActionMap Get() { return m_Wrapper.m_PlayerCamera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerCameraActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerCameraActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Add(instance);
            @CameraControls.started += instance.OnCameraControls;
            @CameraControls.performed += instance.OnCameraControls;
            @CameraControls.canceled += instance.OnCameraControls;
        }

        private void UnregisterCallbacks(IPlayerCameraActions instance)
        {
            @CameraControls.started -= instance.OnCameraControls;
            @CameraControls.performed -= instance.OnCameraControls;
            @CameraControls.canceled -= instance.OnCameraControls;
        }

        public void RemoveCallbacks(IPlayerCameraActions instance)
        {
            if (m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerCameraActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerCameraActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerCameraActions @PlayerCamera => new PlayerCameraActions(this);

    // PlayerActions
    private readonly InputActionMap m_PlayerActions;
    private List<IPlayerActionsActions> m_PlayerActionsActionsCallbackInterfaces = new List<IPlayerActionsActions>();
    private readonly InputAction m_PlayerActions_Dodge;
    private readonly InputAction m_PlayerActions_Jump;
    private readonly InputAction m_PlayerActions_R1LeftClick;
    private readonly InputAction m_PlayerActions_QuedR1;
    private readonly InputAction m_PlayerActions_R2;
    private readonly InputAction m_PlayerActions_QuedR2;
    private readonly InputAction m_PlayerActions_ChargeR2;
    private readonly InputAction m_PlayerActions_Sprint;
    private readonly InputAction m_PlayerActions_LockOn;
    private readonly InputAction m_PlayerActions_SeekLockOnTargetLeft;
    private readonly InputAction m_PlayerActions_SeekLockOnTargetRight;
    private readonly InputAction m_PlayerActions_SwitchRightWeapon;
    private readonly InputAction m_PlayerActions_SwitchLeftWeapon;
    private readonly InputAction m_PlayerActions_SwitchWeaponRightScroll;
    private readonly InputAction m_PlayerActions_SwitchWeaponLeftScroll;
    public struct PlayerActionsActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActionsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Dodge => m_Wrapper.m_PlayerActions_Dodge;
        public InputAction @Jump => m_Wrapper.m_PlayerActions_Jump;
        public InputAction @R1LeftClick => m_Wrapper.m_PlayerActions_R1LeftClick;
        public InputAction @QuedR1 => m_Wrapper.m_PlayerActions_QuedR1;
        public InputAction @R2 => m_Wrapper.m_PlayerActions_R2;
        public InputAction @QuedR2 => m_Wrapper.m_PlayerActions_QuedR2;
        public InputAction @ChargeR2 => m_Wrapper.m_PlayerActions_ChargeR2;
        public InputAction @Sprint => m_Wrapper.m_PlayerActions_Sprint;
        public InputAction @LockOn => m_Wrapper.m_PlayerActions_LockOn;
        public InputAction @SeekLockOnTargetLeft => m_Wrapper.m_PlayerActions_SeekLockOnTargetLeft;
        public InputAction @SeekLockOnTargetRight => m_Wrapper.m_PlayerActions_SeekLockOnTargetRight;
        public InputAction @SwitchRightWeapon => m_Wrapper.m_PlayerActions_SwitchRightWeapon;
        public InputAction @SwitchLeftWeapon => m_Wrapper.m_PlayerActions_SwitchLeftWeapon;
        public InputAction @SwitchWeaponRightScroll => m_Wrapper.m_PlayerActions_SwitchWeaponRightScroll;
        public InputAction @SwitchWeaponLeftScroll => m_Wrapper.m_PlayerActions_SwitchWeaponLeftScroll;
        public InputActionMap Get() { return m_Wrapper.m_PlayerActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActionsActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActionsActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Add(instance);
            @Dodge.started += instance.OnDodge;
            @Dodge.performed += instance.OnDodge;
            @Dodge.canceled += instance.OnDodge;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @R1LeftClick.started += instance.OnR1LeftClick;
            @R1LeftClick.performed += instance.OnR1LeftClick;
            @R1LeftClick.canceled += instance.OnR1LeftClick;
            @QuedR1.started += instance.OnQuedR1;
            @QuedR1.performed += instance.OnQuedR1;
            @QuedR1.canceled += instance.OnQuedR1;
            @R2.started += instance.OnR2;
            @R2.performed += instance.OnR2;
            @R2.canceled += instance.OnR2;
            @QuedR2.started += instance.OnQuedR2;
            @QuedR2.performed += instance.OnQuedR2;
            @QuedR2.canceled += instance.OnQuedR2;
            @ChargeR2.started += instance.OnChargeR2;
            @ChargeR2.performed += instance.OnChargeR2;
            @ChargeR2.canceled += instance.OnChargeR2;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @LockOn.started += instance.OnLockOn;
            @LockOn.performed += instance.OnLockOn;
            @LockOn.canceled += instance.OnLockOn;
            @SeekLockOnTargetLeft.started += instance.OnSeekLockOnTargetLeft;
            @SeekLockOnTargetLeft.performed += instance.OnSeekLockOnTargetLeft;
            @SeekLockOnTargetLeft.canceled += instance.OnSeekLockOnTargetLeft;
            @SeekLockOnTargetRight.started += instance.OnSeekLockOnTargetRight;
            @SeekLockOnTargetRight.performed += instance.OnSeekLockOnTargetRight;
            @SeekLockOnTargetRight.canceled += instance.OnSeekLockOnTargetRight;
            @SwitchRightWeapon.started += instance.OnSwitchRightWeapon;
            @SwitchRightWeapon.performed += instance.OnSwitchRightWeapon;
            @SwitchRightWeapon.canceled += instance.OnSwitchRightWeapon;
            @SwitchLeftWeapon.started += instance.OnSwitchLeftWeapon;
            @SwitchLeftWeapon.performed += instance.OnSwitchLeftWeapon;
            @SwitchLeftWeapon.canceled += instance.OnSwitchLeftWeapon;
            @SwitchWeaponRightScroll.started += instance.OnSwitchWeaponRightScroll;
            @SwitchWeaponRightScroll.performed += instance.OnSwitchWeaponRightScroll;
            @SwitchWeaponRightScroll.canceled += instance.OnSwitchWeaponRightScroll;
            @SwitchWeaponLeftScroll.started += instance.OnSwitchWeaponLeftScroll;
            @SwitchWeaponLeftScroll.performed += instance.OnSwitchWeaponLeftScroll;
            @SwitchWeaponLeftScroll.canceled += instance.OnSwitchWeaponLeftScroll;
        }

        private void UnregisterCallbacks(IPlayerActionsActions instance)
        {
            @Dodge.started -= instance.OnDodge;
            @Dodge.performed -= instance.OnDodge;
            @Dodge.canceled -= instance.OnDodge;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @R1LeftClick.started -= instance.OnR1LeftClick;
            @R1LeftClick.performed -= instance.OnR1LeftClick;
            @R1LeftClick.canceled -= instance.OnR1LeftClick;
            @QuedR1.started -= instance.OnQuedR1;
            @QuedR1.performed -= instance.OnQuedR1;
            @QuedR1.canceled -= instance.OnQuedR1;
            @R2.started -= instance.OnR2;
            @R2.performed -= instance.OnR2;
            @R2.canceled -= instance.OnR2;
            @QuedR2.started -= instance.OnQuedR2;
            @QuedR2.performed -= instance.OnQuedR2;
            @QuedR2.canceled -= instance.OnQuedR2;
            @ChargeR2.started -= instance.OnChargeR2;
            @ChargeR2.performed -= instance.OnChargeR2;
            @ChargeR2.canceled -= instance.OnChargeR2;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @LockOn.started -= instance.OnLockOn;
            @LockOn.performed -= instance.OnLockOn;
            @LockOn.canceled -= instance.OnLockOn;
            @SeekLockOnTargetLeft.started -= instance.OnSeekLockOnTargetLeft;
            @SeekLockOnTargetLeft.performed -= instance.OnSeekLockOnTargetLeft;
            @SeekLockOnTargetLeft.canceled -= instance.OnSeekLockOnTargetLeft;
            @SeekLockOnTargetRight.started -= instance.OnSeekLockOnTargetRight;
            @SeekLockOnTargetRight.performed -= instance.OnSeekLockOnTargetRight;
            @SeekLockOnTargetRight.canceled -= instance.OnSeekLockOnTargetRight;
            @SwitchRightWeapon.started -= instance.OnSwitchRightWeapon;
            @SwitchRightWeapon.performed -= instance.OnSwitchRightWeapon;
            @SwitchRightWeapon.canceled -= instance.OnSwitchRightWeapon;
            @SwitchLeftWeapon.started -= instance.OnSwitchLeftWeapon;
            @SwitchLeftWeapon.performed -= instance.OnSwitchLeftWeapon;
            @SwitchLeftWeapon.canceled -= instance.OnSwitchLeftWeapon;
            @SwitchWeaponRightScroll.started -= instance.OnSwitchWeaponRightScroll;
            @SwitchWeaponRightScroll.performed -= instance.OnSwitchWeaponRightScroll;
            @SwitchWeaponRightScroll.canceled -= instance.OnSwitchWeaponRightScroll;
            @SwitchWeaponLeftScroll.started -= instance.OnSwitchWeaponLeftScroll;
            @SwitchWeaponLeftScroll.performed -= instance.OnSwitchWeaponLeftScroll;
            @SwitchWeaponLeftScroll.canceled -= instance.OnSwitchWeaponLeftScroll;
        }

        public void RemoveCallbacks(IPlayerActionsActions instance)
        {
            if (m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActionsActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActionsActions @PlayerActions => new PlayerActionsActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_DeleteSaveFile;
    public struct UIActions
    {
        private @PlayerControls m_Wrapper;
        public UIActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @DeleteSaveFile => m_Wrapper.m_UI_DeleteSaveFile;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @DeleteSaveFile.started += instance.OnDeleteSaveFile;
            @DeleteSaveFile.performed += instance.OnDeleteSaveFile;
            @DeleteSaveFile.canceled += instance.OnDeleteSaveFile;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @DeleteSaveFile.started -= instance.OnDeleteSaveFile;
            @DeleteSaveFile.performed -= instance.OnDeleteSaveFile;
            @DeleteSaveFile.canceled -= instance.OnDeleteSaveFile;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IPlayerMovementActions
    {
        void OnMovement(InputAction.CallbackContext context);
    }
    public interface IPlayerCameraActions
    {
        void OnCameraControls(InputAction.CallbackContext context);
    }
    public interface IPlayerActionsActions
    {
        void OnDodge(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnR1LeftClick(InputAction.CallbackContext context);
        void OnQuedR1(InputAction.CallbackContext context);
        void OnR2(InputAction.CallbackContext context);
        void OnQuedR2(InputAction.CallbackContext context);
        void OnChargeR2(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnLockOn(InputAction.CallbackContext context);
        void OnSeekLockOnTargetLeft(InputAction.CallbackContext context);
        void OnSeekLockOnTargetRight(InputAction.CallbackContext context);
        void OnSwitchRightWeapon(InputAction.CallbackContext context);
        void OnSwitchLeftWeapon(InputAction.CallbackContext context);
        void OnSwitchWeaponRightScroll(InputAction.CallbackContext context);
        void OnSwitchWeaponLeftScroll(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnDeleteSaveFile(InputAction.CallbackContext context);
    }
}
